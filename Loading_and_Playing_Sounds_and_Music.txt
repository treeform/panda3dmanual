<h2>Architecture</h2>

The implementation of the sound system in Panda3d allows for a division of audio into two categories - Sound Effects and Music. This division is only a convenience for programmers as Panda3d allows these two audio groups to be treated individually. These differences are explained on the next page.

<h2>Basics</h2>

<b><i>Loading a Sound</i></b>

Loading sound is done through the <code>Loader</code> class. (Loading sounds through the <code>base</code> builtin is deprecated and is only present for backwards compatibility.)


[python]
In a normal Panda3D environment, <code>loader</code> is a builtin when you import <code>DirectStart</code> like this:

<code>
import direct.directbase.DirectStart
</code>
[/python]

Load the sound, by supplying the path to the sound. Here's an example:

[python]
<code python>
mySound = loader.loadSfx("SoundFile.wav")
</code>
[/python]

[cxx]
<code cxx>
PT(AudioManager) AM = AudioManager::create_AudioManager();
PT(AudioSound) mySound = AM->get_sound("hello.mp3") ;
</code>
[/cxx]

These will return an object of the type <code>AudioSound</code>. It is necessary to put the extension in the sound filename. 


<b><i>Playing/Stopping a Sound</i></b>

To play sounds you can do the following:

[python]
<code python>
mySound.play()
</code>
[/python]

[cxx]
<code cxx>
mySound->play();
</code>
[/cxx]

To stop a sound:

[python]
<code python>
mySound.stop()
</code>
[/python]

[cxx]
<code cxx>
mySound->stop();
</code>
[/cxx]


<b><i>Querying Sound Status</i></b>

To check the status of a sound:
[python]
<code python>
mySound.status()
</code>
[/python]

[cxx]
<code cxx>
mySound->status();
</code>
[/cxx]

<code>status()</code> returns 1 if it isn't currently playing and 2 if it is playing.


<b><i>Setting Volume</i></b>

The volume can be set between 0 and 1 and will linearly scale between these.

[python]
<code python>
mySound.setVolume(0.5)
</code>
[/python]

[cxx]
<code cxx>
mySound->set_volume(0.5);
</code>
[/cxx]


<b><i>Panning a Sound</i></b>

You can change the balance of a sound. The range is between -1.0 to 1.0. Hard left is -1.0 and hard right is 1.0.

[python]
<code python>
mySound.setBalance(-0.5)
</code>
[/python]

[cxx]
<code cxx>
mySound->set_balance(-0.5);
</code>
[/cxx]

[python]
<h2>NOTE !!!</h2>

If running Panda from interactive prompt you must call <code>update()</code> after you play a sound.


<code python>
base.sfxManagerList[n].update()
</code>

This is because the <code>update()</code> command is called every frame to reset a sound's channel. 
[/python]

In interactive mode Panda's frame update is suspended, and does not run automatically.
