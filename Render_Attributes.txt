<h2>Render Attributes Basics</h2>

After loading a model, you can alter its appearance by altering its <i>attributes</i>.  For example, you can apply a <i>color</i> to the model,
you can illuminate it with <i>lights</i>, you can cause it to be
obscured by <i>fog</i>, you can make it partially <i>transparent</i>, and
so forth.  All of these are called render attributes.

Collectively, all the attributes of an object are called the object's
<i>render state</i>, or sometimes just the object's <i>state.</i>

<h2>Propagation of Attributes</h2>

Attributes can be stored on any node of the scene graph; setting an attribute on a node automatically applies it to that node as well as to all of the children of the node (unless an override is in effect, but that's a more advanced topic).

It is possible to create these attributes and assign them to a node directly:

<pre class="codeblock">
nodePath.node().setAttrib(attributeObject)
</pre>

But in many cases, especially with the most commonly-modified attributes, you don't need to create the attributes directly as there is a convenience function on NodePath (e.g. <code>nodePath.setFog()</code>) that manages the creation of the attributes for you; there will also be a corresponding clear function on NodePath to remove the attribute (<code>nodePath.clearFog()</code>).

<h2>Render Attribute Priorities</h2>

Every attribute has a <i>priority</i>.  By default, that priority is zero.
That priority value affects the inheritance of attributes.

<h2>Incomplete Section</h2>

Note: this section is incomplete.  It will be updated soon.
