The DirectOptionMenu class models a popup menu with an arbitrary number of items.  It is composed of the menu bar, the popup marker, and the popup menu itself.  The popup menu appears when the menu is clicked on and disappears when the user clicks again; if the click was inside the popup, the selection changes.  By default, the text on the menu changes to whatever item is currently selected.  The attributes that affect the appearance of the menu bar don't apply to the popup.  Make sure to specify the items option or it may crash.


<center><table>
<tr><td><b>Keyword</b></td><td><b>Definition</b></td><td><b>Value</b></td></tr>
<tr><td>textMayChange</td><td>Whether the text on the menu changes with the selection</td><td>0 or 1</td></tr>
<tr><td>initialitem</td><td>The index of the item that appears next to the cursor when the popup appears</td><td>Number</td></tr>
<tr><td>items</td><td>List of items in the popup menu</td><td>[Strings]</td></tr>
<tr><td>command</td><td>Function called when an item is selected (the item is passed in as a parameter)</td><td>Function</td></tr>
<tr><td>commandButtons</td><td>Which mouse button must be clicked to open the popup</td><td>LMB, MMB, or RMB</td></tr>
<tr><td>extraArgs</td><td>Extra arguments to the function specified in command</td><td>[Extra Arguments]</td></tr>
<tr><td>highlightColor</td><td>Color of highlighted text</td><td>(R,G,B,A)</td></tr>
<tr><td>highlightScale</td><td>Scale of highlighted text</td><td>(Width,Height)</td></tr>
<tr><td>rolloverSound</td><td>The sound made when the cursor rolls over the button</td><td>Sound File Path</td></tr>
<tr><td>clickSound</td><td>The sound made when the cursor clicks on the button</td><td>Sound File Path</td></tr>
<tr><td>popupMarkerBorder</td><td>Use width to change the size of the border around the popup marker</td><td>(Width,Height)</td></tr>
<tr><td>popupMarker_image</td><td>Set the state images of the popupMarker</td><td>(see directButton: image)</td></tr>
<tr><td>popupMarker_scale</td><td>Set the scale of the popupMarker</td><td>scale=x  or scale=(x,y,z)</td></tr>
<tr><td>popupMarker_pos</td><td>Set the poition of the popupMarker relative to the parent optionMenu</td><td>pos=(x,y,z)</td></tr>
<tr><td>popupMarker_relief</td><td>Set the relief value of the popupMarker, the depth of the beveled edge</td><td>relief=x (for int value) or relief=None (for no relief)</td></tr>

</table></center>

<h2>Example</h2>
<code python>
import direct.directbase.DirectStart
from direct.gui.OnscreenText import OnscreenText 
from direct.gui.DirectGui import *
from pandac.PandaModules import *

# Add some text
bk_text = "DirectOptionMenu Demo"
textObject = OnscreenText(text = bk_text, pos = (0.85,0.85), 
scale = 0.07,fg=(1,0.5,0.5,1),align=TextNode.ACenter,mayChange=1)

# Add some text
output = ""
textObject = OnscreenText(text = output, pos = (0.95,-0.95),
 scale = 0.07,fg=(1,0.5,0.5,1),align=TextNode.ACenter,mayChange=1)

# Callback function to set  text 
def itemSel(arg):
	output = "Item Selected is: "+arg
	textObject.setText(output)

# Create a frame
menu = DirectOptionMenu(text="options", scale=0.1,items=["item1","item2","item3"],initialitem=2,
highlightColor=(0.65,0.65,0.65,1),command=itemSel)

# Run the tutorial
run()
</code>

This is a simple demonstration of the DirectOptionMenu.

<h2>Dynamic Updating of a Menu</h2>
<code python>
import direct.directbase.DirectStart
from direct.gui.OnscreenText import OnscreenText 
from direct.gui.DirectGui import *
from pandac.PandaModules import *

# Add some text
bk_text = "DirectOptionMenu Demo"
textObject = OnscreenText(text = bk_text, pos = (0.85,0.85), 
scale = 0.07,fg=(1,0.5,0.5,1),align=TextNode.ACenter,mayChange=1)

# Add some text
output = ""
textObject = OnscreenText(text = output, pos = (0.95,-0.95), 
scale = 0.07,fg=(1,0.5,0.5,1),align=TextNode.ACenter,mayChange=1)

# Callback function to set text
def itemSel(arg):
	if(arg != "Add"): #no need to add an element
		output = "Item Selected is: "+arg
		textObject.setText(output)
	else: #add an element
		tmp_menu = menu['items']
		new_item = "item"+str(len(tmp_menu))
		tmp_menu.insert(-1,new_item) #add the element before add
		menu['items'] = tmp_menu	
		#set the status message
		output = "Item Added is: "+new_item
		textObject.setText(output)

# Create a frame
menu = DirectOptionMenu(text="options", scale=0.1,items=["item1","item2","item3","Add"],
initialitem=2,highlightColor=(0.65,0.65,0.65,1),command=itemSel,textMayChange=1)

# Procedurally select a item
menu.set(0)

# Run the tutorial
run()
</code>

In this example we add an item to the menu whenever the Add item is selected.
