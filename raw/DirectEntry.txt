The DirectEntry creates a field that accepts text entered by the user.  It provides a blinking cursor and support for backspace and the arrow keys.  It can accept either a single line of text, with a fixed width limit (it doesn't scroll), or it can accept multiple word-wrapped lines.  

<center><table>
<tr><td><b>Keyword</b></td><td><b>Definition</b></td><td><b>Value</b></td></tr>
<tr><td>initialText</td><td>Initial text to load in the field</td><td>String</td></tr>
<tr><td>entryFont</td><td>Font to use for text entry</td><td>Font object</td></tr>
<tr><td>width</td><td>Width of field in screen units</td><td>Number</td></tr>
<tr><td>numLines</td><td>Number of lines in the field</td><td>Integer</td></tr>
<tr><td>cursorKeys</td><td>True to enable the use of cursor keys (arrow keys)</td><td>0 or 1</td></tr>
<tr><td>obscured</td><td>True to hide passwords, etc.</td><td>0 or 1</td></tr>
<tr><td>command</td><td>Function to call when enter is pressed(the text in the field is passed to the function)</td><td>Function</td></tr>
<tr><td>extraArgs</td><td>Extra arguments to the function specified in command</td><td>[Extra Arguments]</td></tr>
<tr><td>rolloverSound</td><td>The sound made when the cursor rolls over the field</td><td>Sound File Path</td></tr>
<tr><td>clickSound</td><td>The sound made when the cursor inside the field</td><td>Sound File Path</td></tr>
<tr><td>focus</td><td>Whether or not the field begins with focus (focusInCommand is called if true)</td><td>0 or 1</td></tr>
<tr><td>backgroundFocus</td><td>If true, field begins with focus but with hidden cursor, and focusInCommand is not called</td><td>0 or 1</td></tr>
<tr><td>focusInCommand</td><td>Function called when the field gains focus</td><td>Function</td></tr>
<tr><td>focusInExtraArgs</td><td>Extra arguments to the function specified in focusInCommand</td><td>[Extra Arguments]</td></tr>
<tr><td>focusOutCommand</td><td>Function called when the field loses focus</td><td>Function</td></tr>
<tr><td>focusOutExtraArgs</td><td>Extra arguments to the function specified in focusOutCommand</td><td>[Extra Arguments]</td></tr>

</table></center>

<h2>Example</h2>
<code python>
import direct.directbase.DirectStart
from direct.gui.OnscreenText import OnscreenText 
from direct.gui.DirectGui import *
from pandac.PandaModules import *

#add some text
bk_text = "This is my Demo"
textObject = OnscreenText(text = bk_text, pos = (0.95,-0.95), 
scale = 0.07,fg=(1,0.5,0.5,1),align=TextNode.ACenter,mayChange=1)

#callback function to set  text 
def setText(textEntered):
	textObject.setText(textEntered)

#clear the text
def clearText():
	b.enterText('')

#add button
b = DirectEntry(text = "" ,scale=.05,command=setText,
initialText="Type Something", numLines = 2,focus=1,focusInCommand=clearText)

#run the tutorial
run()
</code>

This example implements a text entry widget typically seen in web pages.
