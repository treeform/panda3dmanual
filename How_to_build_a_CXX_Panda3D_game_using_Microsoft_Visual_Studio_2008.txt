[python]This page is related to C++ usage of Panda3D and not to Python usage. If you are a Python user, please skip this page. For C++ users, please toggle to the C++ version of this page.[/python]
[cxx]<h2>Steps to compile C++ in Visual Studio 2008</h2>
	Open Visual Studio 2008 and start a new project. You need to add directories corresponding to your installed Panda3D version.  If you installed to C:\Panda3D-1.6.2, for example, then you would add the following directories by using the <code> Tools -> Options... </code> pull-down menu and then selecting <code> Projects and Solutions </code> and in that selecting <code> VC++ Directories </code> and continuing on to enter the following:

<code cxx>

	Executable Files 
        C:\Panda3D-1.6.2\bin
</code>
<code cxx>
	Include Files  
        C:\Panda3D-1.6.2\python\include
        C:\Panda3D-1.6.2\include 
</code>
<code cxx>

	Library Files 
        C:\Panda3D-1.6.2\python\Lib
        C:\Panda3D-1.6.2\python\libs
        C:\Panda3D-1.6.2\lib 
</code>                  
	After adding all these directories, right click on project and select properties. In the menu that comes up select the <code> Linker </code> and then the <code> Input </code> tab. In the Additional Dependencies row add the following libraries:
<code cxx>
libp3framework.lib

libpanda.lib

libpandafx.lib

libpandaexpress.lib

libp3dtool.lib

libp3dtoolconfig.lib

libp3pystub.lib

libp3direct.lib
</code>
	Also while compiling your code donâ€™t forget to set it to release mode while compiling and building your code since you are running it with a release mode of panda3D.
	The two header files which are absolutely essential to run the panda programs in C++ are:
<code cxx>
#include "pandaFramework.h"

#include "pandaSystem.h"
</code>
[/cxx]
