<span class="suppress-screenshots"></span> 
<b>This feature is only available in Panda3D versions 1.5.3 and higher</b>

DirectRadioButtons are similar to check buttons, except only one button is selected when it is clicked.  Their usage is almost identical to regular buttons, except that the text area and box area can be modified separately.

<center><table>
<tr><td><b>Keyword</b></td><td><b>Definition</b></td><td><b>Value</b></td></tr>
<tr><td>text_scale</td><td>Scale of the displayed text</td><td>(sx,sz)</td></tr>
<tr><td>indicatorValue</td><td>The initial boolean state of the radiobutton</td><td>0 or 1</td></tr>
<tr><td>variable</td><td>The variable whose value will be set by radiobutton. Since we can not use call by reference for int or string variables in python, I used a list insteads.</td><td>define a list and pass it</td></tr>
<tr><td>value</td><td>The value to be set to the variable. Since we are using a list, we can define multiple values. But the length of value list must be same as length of variable list.</td><td>a list of values</td></tr>
<tr><td>others</td><td>The list of radio button instances sharing same variable. This must be set by using setOthers() after all radiobutton is created.</td><td>a list of radioButton instances</td></tr>
<tr><td>boxImage</td><td>BG Image of the radio button</td><td>Image Path</td></tr>
<tr><td>boxImageColor</td><td>Color of the BG image</td><td>(R,G,B,A)</td></tr>
<tr><td>boxImageScale</td><td>Scale of the BG image</td><td>Number</td></tr>
<tr><td>boxGeom</td><td>FG Image on the radio button</td><td>Image Path</td></tr>
<tr><td>boxGeomColor</td><td>Color of the FG image</td><td>(R,G,B,A)</td></tr>
<tr><td>boxGeomScale</td><td>Scale of the FG image</td><td>Number</td></tr>
<tr><td>boxPlacement</td><td>Position of the box relative to the text area</td><td>'left','right', 'above', 'below', 'center'</td></tr>
<tr><td>boxBorder</td><td>Size of the border around the box</td><td>Number</td></tr>
<tr><td>command</td><td>Command the button performs when clicked (In version 1.6 and higher, no parameter is passed unless extraArgs are defined. Before, a single argument was passed by default.)</td><td>Function</td></tr>
<tr><td>extraArgs</td><td>Extra arguments to the function specified in command</td><td>[Extra Arguments]</td></tr>
<tr><td>commandButtons</td><td>Which mouse button must be clicked to do the command</td><td>LMB, MMB, or RMB</td></tr>
<tr><td>rolloverSound</td><td>The sound made when the cursor rolls over the button</td><td>Sound File Path</td></tr>
<tr><td>clickSound</td><td>The sound made when the cursor clicks on the button</td><td>Sound File Path</td></tr>
<tr><td>pressEffect</td><td>Whether or not the button sinks in when clicked</td><td><0 or 1></td></tr>
</table></center>

<h2>Example</h2>
<code python>
import direct.directbase.DirectStart
from direct.gui.OnscreenText import OnscreenText 
from direct.gui.DirectGui import *
from pandac.PandaModules import *

v = [0]
# Add some text
bk_text = "This is my Demo"
textObject = OnscreenText(text = bk_text, pos = (0.95,-0.95), 
scale = 0.07,fg=(1,0.5,0.5,1),align=TextNode.ACenter,mayChange=1)

# Callback function to set  text 
def setText(status=None):
    bk_text = "CurrentValue : %s"%v
    textObject.setText(bk_text)

# Add button
buttons = [
    DirectRadioButton(text = 'RadioButton0', variable=v, value=[0], scale=0.05, pos=(-0.4,0,0), command=setText),
    DirectRadioButton(text = 'RadioButton1', variable=v, value=[1], scale=0.05, pos=(0,0,0), command=setText),
    DirectRadioButton(text = 'RadioButton2', variable=v, value=[2], scale=0.05, pos=(0.4,0,0), command=setText)
]

for button in buttons:
    button.setOthers(buttons)

# Run the tutorial
run()
</code>
