Panda periodically outputs log messages for debugging purposes.  A typical log message might look like this:

<pre class="codeblock">
:util(warning): Adjusting global clock's real time by -3.3 seconds.
</pre>

The first part of the message, <code>util</code>, is the name of the module that generated the message.  The second part, <code>warning</code>, indicates the severity.  The severity levels are, in decreasing order: fatal, error, warning, info, debug, and spam. The panda configuration file (Config.prc) contains these directives:

<pre class="codeblock">
notify-level warning
default-directnotify-level warning
</pre>

Directives like these tell panda which messages to show, and which to suppress.  In the default configuration (shown above), all messages whose severity is <code>warning</code> or above are shown, all messages whose severity is less are suppressed.

It is interesting and educational to change the configuration to this:

<pre class="codeblock">
notify-level spam
default-directnotify-level spam
</pre>

If you do this, panda will print out vast amounts of information while it runs. These informational messages can be useful for debugging.  However, there are so many print-statements that it slows panda down to a crawl.  So it may be desirable to tell panda to narrow it down a little.  The way to do that is to name a particular module in the panda config file.  For example, you might do this:

<pre class="codeblock">
notify-level warning
notify-level-glgsg spam
default-directnotify-level warning
</pre>

This tells panda that module "glgsg" should print out everything it can, but that every other module should only print warnings and errors.  By the way, module <code>glgsg</code> is a particularly interesting module to investigate.  This is the module that invokes OpenGL.  If you tell it to spam you, it will tell you what it's setting the MODELVIEW and PROJECTION matrices to, and lots of other interesting information.

<h2>Generating your own Log Messages</h2>

You can use the <code>Notify</code> class to output your own log messages.

FINISH THIS SECTION.

<h2>Redirecting Log Messages to a File</h2>

If you wish, you can redirect all of panda's log messages into a file.  The following snippet will do the trick:

<pre class="codeblock">
nout = MultiplexStream()
Notify.ptr().setOstreamPtr(nout, 0)
nout.addFile(Filename("out.txt"))
</pre>
