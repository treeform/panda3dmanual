Just like [[OnscreenText]], you can use OnscreenImage as a quick way to put an image onscreen. Use an OnscreenImage whenever you want a quick way to display an ordinary image without a lot of fancy requirements.

<pre class="codeblock">
from direct.gui.OnscreenImage import OnscreenImage
imageObject = OnscreenImage(image = 'myImage.jpg', pos = (-0.5, 0, 0.02))
</pre>

If you want, you can change the image into another one using setImage():

<pre class="codeblock">
imageObject.setImage('myImage2.jpg')
</pre>

When you want to take the image away, use:

<pre class="codeblock">
imageObject.destroy()
</pre>

The following keyword parameters may be specified to the constructor:

<center><table>
<tr><td valign="top">image</td><td>the actual geometry to display or a file name. This may be omitted and specified later via setImage() if you don't have it available.</td></tr>

<tr><td valign="top">pos</td><td>the x, y, z position of the geometry on the screen. This maybe a 3-tuple of floats or a vector. y should be zero</td></tr>

<tr><td valign="top">scale</td><td>the size of the geometry. This may either be a single float, a 3-tuple of floats, or a vector, specifying a different x, y, z scale. y should be 1</td></tr>

<tr><td valign="top">hpr</td><td>the h, p, r of the geometry on the screen. This maybe a 3-tuple of floats or a vector.</td></tr>

<tr><td valign="top">color</td><td>the (r, g, b, a) color of the geometry. This is normally a 4-tuple of floats or ints.</td></tr>

<tr><td valign="top">parent</td><td>the NodePath to parent the text to initially; the default is aspect2d.</td></tr>
</table></center>

'''NOTE:''' To enable transparency in images, you must first set the TransparencyAttrib, otherwise the transparent parts of the image will be shown black:
<pre class="codeblock">
from pandac.PandaModules import TransparencyAttrib
self.myImage=OnscreenImage(image = 'myImage.png', pos = (0, 0, 0))
self.myImage.setTransparency(TransparencyAttrib.MAlpha)
</pre>
Since GIF's are not supported you should use PNG or TGA if you need transparency.
