You can use multiple programming languages with Panda3D. The most commonly used language is Python, followed by C++. Some manual pages offer both C++ and Python information - use the toggle button at the top of the manual page to toggle between C++ information and Python information.

[python]For example, if you want this page to contain information about learning C++ instead of learning Python, just hit the "C++" link at the top of this page.[/python]
[cxx]For example, if you want this page to contain information about learning Python instead of learning C++, just hit the "Python" link at the top of this page.[/cxx]

[python]
==Learning Python==

Since Panda3D is a library, and not a point-n-click game maker, it is needed to learn Python or C++ before you will be able to use it. Since this engine's main goal is to support Python, it would be a good idea to familiarize yourself with Python before continuing.

Python is an interpreted, interactive,
object-oriented language comparable to Java or Perl. It is available
on several platforms, including UNIX, Windows, OS/2, and Mac. Python
also has a large number of modules outside of the standard Python
installation, and additional modules can be created in C or
C++. Because it is late-binding and requires minimal memory
management, it is an ideal language for rapid prototyping.

<b>The Copy of Python that comes with Panda</b>

It is not necessary to install python, because the windows installer for Panda3D includes a copy.  This is a completely normal copy of python, identical to what you would have if you installed python using the standard python installer.  Panda's built-in copy of python is automatically added to the PATH environment variable.  This enables you to type "python" at the command prompt, and it will run the python that comes with panda.

<b>What if I already have a copy of Python?</b>

If you already have a copy of python, and you wish to use that instead of the one provided with panda, it is easy to do so.  Simply create a "panda.pth" file inside your copy of python, containing the path of the panda directory.  This will enable your copy of python to find the panda libraries.

For this to work, the version of python that you use must match the version of python included with panda.  The panda libraries are compiled for that particular version, and will not work with any other.

Of course, if you do use your own copy of python, you may wish to delete panda's copy of python, or at least, remove it from the PATH environment variable.  Otherwise, you will have two copies of python, which can lead to confusion.

<b>Python Programming Resources</b>

There are a lot of other resources available for programming in Python.
Here is a list of some of the best:

Links from the official python website:
<ul>
        <li>[http://www.python.org Official Website - http://www.python.org]</li>
        <li>[http://docs.python.org/ Current Python Documentation ]</li>
        <li>[http://www.python.org/doc Python Documentation] This is the version still being used in Panda3D.</li>
        <li>[http://docs.python.org/tut/tut.html Python Tutorial]. Written by Guido Van Rossum, the author of Python.</li>
</ul>

Here are some other good links for learning python:

<ul>
        <li>Programming in Python</li>
        <ul>
                <li>[http://swaroopch.info/text/Byte_of_Python:Main_Page Byte of Python]</li>
                <li>[http://honors.montana.edu/~jjc/easytut/easytut/easytut.html Python for Non-Programmers]</li>
                <li>[http://diveintopython.org Dive Into Python]</li>
                <li>[http://www.rexx.com/~dkuhlman/python_101/python_101.html Python 101]</li>
        </ul>
<li>Miscellaneous python documentation</li>
        <ul>
        <li>[http://python.org/topics/learn/examples.html Python Examples and Sample Code]</li>
        <li>[http://www.effbot.org/zone/librarybook-index.htm The Standard Python Library]</li>
        <li>[http://www.python.org/topics/learn/books.html Python Book List]</li>
        </ul>
</ul>[/python]

[cxx]
==Learning C++==

It is possible to write Panda3D programs using C++.  However, since most of the documentation uses Python, it may be better to learn Panda3D using python first, and then switch to C++ later.  If you do switch, the function calls are very similar.

C++ is an object-oriented high-level multi-purpose language. It is actually a copy of the C programming language, but object-oriented, with more functions.
Here are a few links to C++ tutorials that might be useful for you:
*[http://www.cplusplus.com/doc/tutorial/ http://www.cplusplus.com/doc/tutorial/]
*[http://www.intap.net/~drw/cpp/ http://www.intap.net/~drw/cpp/]
The most recommended compiler on Windows is the Microsoft Visual C++ 2008 compiler, on UNIX it is the GNU G++ compiler.
For information about compiling your C++ program, see [[How to build a CXX Panda3D game|this page]].[/cxx]
