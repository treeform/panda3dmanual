<h2>Enabling or Disabling the Depth Buffer</h2>

By default, depth buffer is enabled and functions normally.
It is possible to turn off the use of the depth buffer.  It is also
possible to alter the behavior of the depth buffer.

The most common thing to want to do is to disable the depth-write.  This
means that geometry will still be <i>tested</i> against the depth buffer,
but it will not affect the depth buffer.  This is often used when rendering
objects such as particles that are transparent.  To disable or enable
the depth-write, use:

<pre class="codeblock">
nodePath.setDepthWrite(False)  # Disable
nodePath.setDepthWrite(True)   # Enable
</pre>

It may also be desirable to disable the depth-test.  This means that the
geometry pays no attention whatsoever to the contents of the depth-buffer.
This is often used for rendering things like heads-up displays, which
have no relation to the 3D depth of the scene.  To disable or enable the
depth-test, use:

<pre class="codeblock">
nodePath.setDepthTest(False)  # Disable
nodePath.setDepthTest(True)   # Enable
</pre>

One can remove these settings using <code>clearDepthTest</code> and <code>clearDepthWrite</code>.

<h2>Altering the Depth Buffer</h2>

Occasionally, it is desirable to alter the functionality of the depth
buffer.  Normally, the depth buffer only renders things that are in front,
but it can be made to render things that are in back, or equal.  This
is rarely used,
but it can be important for certain unusual algorithms like shadow volumes.

To do this, you need to use the DepthTestAttrib directly, in one of the
following variants:

<pre class="codeblock">
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MNone))
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MNever))
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MLess))
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MEqual))
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MLessEqual))
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MGreater))
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MGreaterEqual))
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MNotEqual))
nodePath.setAttrib(DepthTestAttrib.make(RenderAttrib.MAlways))
</pre>

<h2>Depth Sorting</h2>

When turning depth test off, it is sometimes desirable to use depth sorting
instead.  Depth sorting is controlled by the culling system, which can be
controlled by the CullBinAttrib.

<h2>Transparency</h2>

Certain settings of the TransparencyAttrib can also affect the depth-test.
